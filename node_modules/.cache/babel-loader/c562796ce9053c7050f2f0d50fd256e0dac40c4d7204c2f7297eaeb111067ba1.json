{"ast":null,"code":"var _jsxFileName = \"/workspaces/AshTerm/src/components/Term.js\",\n  _s = $RefreshSig$();\nimport Terminal from 'react-console-emulator';\nimport commands from '../components/Commands/commands.js';\nimport React from 'react';\nimport figlet from 'figlet';\nimport getcat from '../utils/cat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Term() {\n  _s();\n  const cmds = commands.commands;\n  const owrs = commands.overwrites;\n  const terminal = /*#__PURE__*/React.createRef();\n  const [prompt, setPrompt] = React.useState('you@/ashterm:~$ ');\n  const [home, sethome] = React.useState('ashterm');\n  const [dir, setdir] = React.useState({\n    'ashterm': []\n  });\n  return /*#__PURE__*/_jsxDEV(Terminal, {\n    ref: terminal,\n    welcomeMessage: [\"Welcome to ashterm!\", \"---\", \"This is a terminal style website made with React.\", \"---\", \"Type 'help' to see a list of commands.\", \"---\", \"try starting with 'cat' (〜￣▽￣)〜\", \"---\"],\n    commands: {\n      clear: {\n        description: 'Clears the terminal',\n        usage: 'clear',\n        fn: () => {\n          terminal.current.clearStdout();\n        }\n      },\n      cat: {\n        description: 'Get a random cute cat~',\n        usage: 'cat',\n        fn: async () => {\n          const url = await getcat();\n          terminal.current.pushToStdout(\"getting a cute cat for you..\\n---\\n\");\n          terminal.current.pushToStdout( /*#__PURE__*/_jsxDEV(\"img\", {\n            src: url,\n            width: \"500px\",\n            height: \"380px\",\n            alt: \"cat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 55\n          }, this));\n        }\n      },\n      cd: {\n        description: 'Change directory, not really, lol!',\n        usage: 'cd <directory>',\n        fn: function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          if (args.length === 1 && args[0] === '..') {\n            if (prompt === 'you@/ashterm:~$ ') {\n              return 'cannot go up';\n            } else {\n              setPrompt(prompt.substring(0, prompt.lastIndexOf('/')) + \":~$ \");\n              sethome(prompt.substring(prompt.lastIndexOf('/', prompt.lastIndexOf('/') - 1) + 1, prompt.lastIndexOf('/')));\n              //console.log(prompt.substring(prompt.lastIndexOf('/', prompt.lastIndexOf('/')-1)+1, prompt.lastIndexOf('/')))\n              //console.log(prompt.lastIndexOf('/', prompt.lastIndexOf('/')-1))\n              //console.log(prompt.lastIndexOf('/'))\n              return 'changed directory';\n            }\n          } else {\n            if (dir[home].includes(args[0])) {\n              setPrompt(`${prompt.slice(0, -4) + \"/\" + args.join('/') + \":~$ \"}`);\n              sethome(args.join('/'));\n              //console.log(prompt.slice(0, -4)+ \"/\" + args.join('/'))\n              return 'changed directory';\n            } else {\n              return 'cannot find directory';\n            }\n          }\n        }\n      },\n      ls: {\n        description: 'List files in the current directory',\n        usage: 'ls',\n        fn: () => {\n          if (dir[home].length === 0) {\n            return 'nothing here :(\\nUse mkdir to create a dir inside this one.';\n          } else {\n            return dir[home].join('\\n');\n          }\n        }\n      },\n      mkdir: {\n        description: 'Make a directory',\n        usage: 'mkdir <directory>',\n        fn: function () {\n          if (arguments.length === 1) {\n            setdir({\n              ...dir,\n              [home]: [...dir[home], arguments.length <= 0 ? undefined : arguments[0]],\n              [arguments.length <= 0 ? undefined : arguments[0]]: []\n            });\n            //console.log(dir)\n            return `created directory ${arguments.length <= 0 ? undefined : arguments[0]}.`;\n          } else {\n            return 'invalid arguments';\n          }\n        }\n      },\n      help: {\n        description: 'List all available commands',\n        usage: 'help',\n        fn: () => {\n          return `\n                            ${Object.keys(owrs).map(cmd => `${cmd}${\" \".repeat(12 - cmd.length)} | ${owrs[cmd].description}${\" \".repeat(39 - owrs[cmd].description.length)} | ${owrs[cmd].usage}`).join('\\n')}\n                            ${Object.keys(cmds).map(cmd => `${cmd}${\" \".repeat(12 - cmd.length)} | ${cmds[cmd].description}${\" \".repeat(39 - cmds[cmd].description.length)} | ${cmds[cmd].usage}`).join('\\n')}\n                        `;\n        }\n      },\n      ...cmds\n    },\n    promptLabel: prompt,\n    autoFocus: true,\n    style: {\n      backgroundColor: null,\n      minHeight: null,\n      maxHeight: null,\n      overflow: 'auto',\n      height: '100%',\n      width: '100%'\n    },\n    styleEchoBack: \"fullInherit\",\n    contentStyle: {\n      color: '#ffb86c',\n      fontWeight: 'normal',\n      paddingLeft: null\n    } // Text colour\n    ,\n    promptLabelStyle: {\n      color: '#ff5555',\n      fontWeight: 'normal'\n    } // Prompt label colour\n    ,\n    inputTextStyle: {\n      color: '#f1fa8c',\n      fontWeight: 'normal'\n    },\n    messageStyle: {\n      color: '#8be9fd',\n      fontWeight: 'normal',\n      paddingLeft: null\n    },\n    scrollBehavior: \"auto\",\n    noDefaults: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(Term, \"3VPGabilMA9axR6yIgBMxevTC3c=\");\n_c = Term;\nvar _c;\n$RefreshReg$(_c, \"Term\");","map":{"version":3,"names":["Terminal","commands","React","figlet","getcat","Term","cmds","owrs","overwrites","terminal","createRef","prompt","setPrompt","useState","home","sethome","dir","setdir","clear","description","usage","fn","current","clearStdout","cat","url","pushToStdout","cd","args","length","substring","lastIndexOf","includes","slice","join","ls","mkdir","help","Object","keys","map","cmd","repeat","backgroundColor","minHeight","maxHeight","overflow","height","width","color","fontWeight","paddingLeft"],"sources":["/workspaces/AshTerm/src/components/Term.js"],"sourcesContent":["import Terminal from 'react-console-emulator'\nimport commands from '../components/Commands/commands.js'\nimport React from 'react'\nimport figlet from 'figlet';\nimport getcat from '../utils/cat'\n\nexport default function Term() {\n    const cmds = commands.commands\n    const owrs = commands.overwrites\n    const terminal = React.createRef()\n    const [prompt, setPrompt] = React.useState('you@/ashterm:~$ ')\n    const [home, sethome] = React.useState('ashterm')\n    const [dir, setdir] = React.useState({\n        'ashterm': []\n    })\n    return (\n        <Terminal\n            ref={terminal}\n            welcomeMessage={[\n                \"Welcome to ashterm!\",\n                \"---\",\n                \"This is a terminal style website made with React.\",\n                \"---\",\n                \"Type 'help' to see a list of commands.\",\n                \"---\",\n                \"try starting with 'cat' (〜￣▽￣)〜\",\n                \"---\",\n            ]}\n            commands={{\n                clear: {\n                    description: 'Clears the terminal',\n                    usage: 'clear',\n                    fn: () => {\n                        terminal.current.clearStdout()\n                    }\n                },\n                cat: {\n                    description: 'Get a random cute cat~',\n                    usage: 'cat',\n                    fn: async () => {\n                        const url = await getcat()\n                        terminal.current.pushToStdout(\"getting a cute cat for you..\\n---\\n\")\n                        terminal.current.pushToStdout(<img src={url} width=\"500px\" height=\"380px\" alt='cat'></img>)\n                    }\n                },\n                cd: {\n                    description: 'Change directory, not really, lol!',\n                    usage: 'cd <directory>',\n                    fn: (...args) => {\n                        if (args.length===1 && args[0]==='..') {\n                            if (prompt === 'you@/ashterm:~$ ') {\n                                return 'cannot go up'\n                            } else {\n                                setPrompt(prompt.substring(0, prompt.lastIndexOf('/'))+\":~$ \")\n                                sethome(prompt.substring(prompt.lastIndexOf('/', prompt.lastIndexOf('/')-1)+1, prompt.lastIndexOf('/')))\n                                //console.log(prompt.substring(prompt.lastIndexOf('/', prompt.lastIndexOf('/')-1)+1, prompt.lastIndexOf('/')))\n                                //console.log(prompt.lastIndexOf('/', prompt.lastIndexOf('/')-1))\n                                //console.log(prompt.lastIndexOf('/'))\n                                return 'changed directory'\n                            }\n                        } else {\n                            if (dir[home].includes(args[0])) {\n                                setPrompt(`${prompt.slice(0, -4)+ \"/\" + args.join('/') + \":~$ \"}`)\n                                sethome(args.join('/'))\n                                //console.log(prompt.slice(0, -4)+ \"/\" + args.join('/'))\n                                return 'changed directory'\n                            } else {\n                                return 'cannot find directory'\n                            }\n                        }\n                        \n                    }\n                },\n                ls: {\n                    description: 'List files in the current directory',\n                    usage: 'ls',\n                    fn: () => {\n                        if (dir[home].length === 0) {\n                            return 'nothing here :(\\nUse mkdir to create a dir inside this one.'\n                        } else {\n                            return dir[home].join('\\n')\n                        }\n                    }\n\n                },\n                mkdir: {\n                    description: 'Make a directory',\n                    usage: 'mkdir <directory>',\n                    fn: (...args) => {\n                        if (args.length===1) {\n                            setdir({\n                                ...dir,\n                                [home]: [...dir[home], args[0]],\n                                [args[0]]:[]\n                            })\n                            //console.log(dir)\n                            return `created directory ${args[0]}.`\n                        } else {\n                            return 'invalid arguments'\n                        }\n                    }\n                },\n                help: {\n                    description: 'List all available commands',\n                    usage: 'help',\n                    fn: () => {\n                        return `\n                            ${Object.keys(owrs).map(cmd => `${cmd}${\" \".repeat(12-cmd.length)} | ${owrs[cmd].description}${\" \".repeat(39-owrs[cmd].description.length)} | ${owrs[cmd].usage}`).join('\\n')}\n                            ${Object.keys(cmds).map(cmd => `${cmd}${\" \".repeat(12-cmd.length)} | ${cmds[cmd].description}${\" \".repeat(39-cmds[cmd].description.length)} | ${cmds[cmd].usage}`).join('\\n')}\n                        `\n                    }\n                },\n                ...cmds\n            }}\n            promptLabel={prompt} \n            autoFocus\n            style={{\n                backgroundColor:null,\n                minHeight: null,\n                maxHeight: null,\n                overflow: 'auto',\n                height: '100%',\n                width: '100%',     \n            }}\n            styleEchoBack='fullInherit'\n            contentStyle={{ color: '#ffb86c' , fontWeight: 'normal', paddingLeft: null}} // Text colour\n            promptLabelStyle={{ color: '#ff5555' , fontWeight:'normal'}} // Prompt label colour\n            inputTextStyle={{ color: '#f1fa8c' , fontWeight: 'normal'}}\n            messageStyle={{ color: '#8be9fd' , fontWeight: 'normal', paddingLeft: null}}\n            scrollBehavior='auto'\n            noDefaults\n        />\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}